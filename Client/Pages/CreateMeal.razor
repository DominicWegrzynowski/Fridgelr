@page "/createmeal"
@using Fridgelr.Shared
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations
@inject NavigationManager navigationManager

<PageTitle>Fridgelr - Create Meal</PageTitle>

<div class="container mt-5 ">
    <div class="row">
        <div class="col">
            <h1>Create Meal</h1>
            <EditForm EditContext="@editContext">
                <div class="row gy-2">
                    <div class="col-12">
                        <label >Meal Time:</label>
                        <InputSelect @bind-Value="meal.MealTime" class="form-select">
                            <option value="Breakfast">Breakfast</option>
                            <option value="Lunch">Lunch</option>
                            <option value="Dinner">Dinner</option>
                            <option value="Dessert">Dessert</option>
                        </InputSelect>
                    </div>
                    <div class="col-12">
                        <label >Ingredients</label>
                        <InputText @bind-Value="meal.Ingredient" maxLength="30" class="form-control mb-2" />
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <button class="btn btn-outline-success" @onclick="AddIngredient">Add</button>
                            <button class="btn btn-outline-danger" @onclick="RemoveAll">Clear</button>
                        </div>
                        <div class="col-12 mt-3">
                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>Ingredients</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach(var ingredient in ingredients)
                                        {
                                            <tr>
                                                <td>@ingredient.Description</td>
                                                <td class="text-end pe-3">
                                                    <button class="btn btn-outline-danger" @onclick="() => RemoveIngredient(ingredient.Id)"><i class="bi bi-trash-fill"></i></button>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <button class="btn btn-success rounded" @onclick="HandleSubmit">Generate</button>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [CascadingParameter]
    private RecipeState? rState { get; set; }
    private EditContext? editContext;
    private Meal meal = new();
    private List<Ingredient> ingredients = new List<Ingredient>();

    protected override void OnInitialized()
    {
        if(rState is null)
        {
            navigationManager.NavigateTo("/", forceLoad: true);
            return;
        }

        editContext = new(meal);

        meal.MealTime = rState.MealTime;
        ingredients = rState.Ingredients;
    }

    private class Meal
    {
        public string? MealTime { get; set; }
        public string? Ingredient { get; set; }
    }

    private void AddIngredient()
    {
        if (!string.IsNullOrEmpty(meal.Ingredient))
        {
            ingredients.Add(new Ingredient()
            {
                Id = Guid.NewGuid(),
                Description = meal.Ingredient
            });
        }

        meal.Ingredient = string.Empty;
    }

    private void RemoveAll()
    {
        ingredients.Clear();
    }

    private void RemoveIngredient(Guid id)
    {
        ingredients.Remove(ingredients.First(i => i.Id == id));
    }

    private void HandleSubmit()
    {
        rState.MealTime = meal.MealTime;
        rState.Ingredients = ingredients;
        navigationManager.NavigateTo("/mealideas");
    }
}
